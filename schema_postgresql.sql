DROP DATABASE IF EXISTS openaccounting;

CREATE DATABASE openaccounting
    WITH
    OWNER = openaccounting
    ENCODING = 'UTF8'
    CONNECTION LIMIT = -1;

use openaccounting;

CREATE TABLE org (id CHAR(16) NOT NULL, inserted BIGINT  NOT NULL, updated BIGINT  NOT NULL, name VARCHAR(100) NOT NULL, currency VARCHAR(10) NOT NULL, precision INT NOT NULL, timezone VARCHAR(100) NOT NULL);

CREATE TABLE "user" (id CHAR(16) NOT NULL, inserted BIGINT  NOT NULL, updated BIGINT  NOT NULL, firstName VARCHAR(50) NOT NULL, lastName VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, passwordHash VARCHAR(100) NOT NULL, agreeToTerms BOOLEAN NOT NULL, passwordReset VARCHAR(32) NOT NULL, emailVerified BOOLEAN NOT NULL, emailVerifyCode VARCHAR(32) NOT NULL, signupSource VARCHAR(100) NOT NULL, UNIQUE(email));

CREATE TABLE userorg (id SERIAL PRIMARY KEY, userId CHAR(16) NOT NULL, orgId CHAR(16) NOT NULL, admin BOOLEAN NOT NULL DEFAULT false);

CREATE TABLE token (id CHAR(16) NOT NULL, name VARCHAR(100), userOrgId INT  NOT NULL);

CREATE TABLE account (id CHAR(16) NOT NULL, orgId CHAR(16) NOT NULL, inserted BIGINT  NOT NULL, updated BIGINT  NOT NULL, name VARCHAR(100) NOT NULL, parent CHAR(16) NOT NULL, currency VARCHAR(10) NOT NULL, precision INT NOT NULL, debitBalance BOOLEAN NOT NULL);

CREATE TABLE transaction (id CHAR(16) NOT NULL, orgId CHAR(16) NOT NULL, userId CHAR(16) NOT NULL, date BIGINT  NOT NULL, inserted BIGINT  NOT NULL, updated BIGINT  NOT NULL, description VARCHAR(300) NOT NULL, data TEXT NOT NULL, deleted BOOLEAN NOT NULL DEFAULT false);

CREATE TABLE split (id SERIAL PRIMARY KEY, transactionId CHAR(16) NOT NULL, accountId CHAR(16) NOT NULL, date BIGINT  NOT NULL, inserted BIGINT  NOT NULL, updated BIGINT  NOT NULL, amount BIGINT NOT NULL, nativeAmount BIGINT NOT NULL, deleted BOOLEAN NOT NULL DEFAULT false);

CREATE TABLE balance (id SERIAL PRIMARY KEY, date BIGINT  NOT NULL, accountId CHAR(16) NOT NULL, amount BIGINT NOT NULL);

CREATE TABLE permission (id CHAR(16) NOT NULL, userId CHAR(16), tokenId CHAR(16), orgId CHAR(16) NOT NULL, accountId CHAR(16) NOT NULL, type INT  NOT NULL, inserted BIGINT  NOT NULL, updated BIGINT  NOT NULL);

CREATE TABLE price (id CHAR(16) NOT NULL, orgId CHAR(16) NOT NULL, currency VARCHAR(10) NOT NULL, date BIGINT  NOT NULL, inserted BIGINT  NOT NULL, updated BIGINT  NOT NULL, price DOUBLE PRECISION  NOT NULL);

CREATE TABLE session (id CHAR(16) NOT NULL, inserted BIGINT  NOT NULL, updated BIGINT  NOT NULL, userId CHAR(16) NOT NULL, terminated BIGINT );

CREATE TABLE apikey (id CHAR(16) NOT NULL, inserted BIGINT  NOT NULL, updated BIGINT  NOT NULL, userId CHAR(16) NOT NULL, label VARCHAR(300) NOT NULL, deleted BIGINT );

CREATE TABLE invite (id VARCHAR(32) NOT NULL, orgId CHAR(16) NOT NULL, inserted BIGINT  NOT NULL, updated BIGINT  NOT NULL, email VARCHAR(100) NOT NULL, accepted BOOLEAN NOT NULL);

CREATE TABLE budgetitem (id SERIAL PRIMARY KEY, orgId CHAR(16) NOT NULL, accountId CHAR(16) NOT NULL, inserted BIGINT  NOT NULL, amount BIGINT NOT NULL);